{"version":3,"file":"component---src-pages-blog-index-js-a94844824ed41ae7f045.js","mappings":"8LAIe,SAASA,EAAT,GAAsC,IAAbC,EAAY,EAAZA,SAGhCC,EAAS,CACb,WAAY,qBACZ,SAAU,CACR,CACE,QAAS,UACTC,KAPyBF,EAAvBG,MAQFC,YARyBJ,EAAhBI,eAYTC,EAAeC,KAAKC,UAAUN,GAEpC,OACE,gBAAC,IAAD,KACE,0BAAQO,KAAK,uBAAuBH,M,oJCd1C,SAASI,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACd,EAAsDA,EAAKC,YAAnDR,EAAR,EAAQA,MAAOS,EAAf,EAAeA,cAAeC,EAA9B,EAA8BA,oBAE9B,OACE,2BAASC,UCVK,0CDWZ,wBAAM,cAAY,QAAlB,KAEA,gBAAC,KAAD,CAAMC,GAAE,SAAWL,EAAKM,MACtB,0BAAKb,GACL,yBACE,gBAACc,EAAA,EAAD,oBACA,wBAAMC,SAAUN,GAAgBC,MAY3B,SAASM,EAAT,GAA2B,IAAVC,EAAS,EAATA,MAC9B,OACE,gCACGA,EAAMC,KAAI,SAACX,GAAD,OACT,gBAACD,EAAD,CAAMa,IAAKZ,EAAKa,GAAIb,KAAMA,QEzBnB,SAASc,EAAT,GAAoC,IAC3CJ,EAD0C,EAARK,KACrBC,OAAOC,MACpB3B,EAAW,CACfG,MAAO,OACPC,YAAa,gDACbwB,IAAK,QAGP,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAK9B,SAAUA,IACf,gBAACD,EAAA,EAAD,CAAeC,SAAUA,IACzB,2BAAS,kBAAgB,QACvB,sBAAIuB,GAAG,QAAP,QACO,gBAAC,IAAD,CAAOQ,OAAO,SAGvB,gBAAC,EAAD,CAAkBX,MAAOA","sources":["webpack://personal-site-generator/./src/components/WebPageSchema.js","webpack://personal-site-generator/./src/components/BlogArchivePosts/BlogArchivePosts.js","webpack://personal-site-generator/./src/components/BlogArchivePosts/blog-archive-posts.module.scss","webpack://personal-site-generator/./src/pages/blog/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nexport default function WebPageSchema({ pageMeta }) {\n  const { title, description } = pageMeta;\n\n  const schema = {\n    '@context': 'http://schema.org/',\n    '@graph': [\n      {\n        '@type': 'WebPage',\n        name: title,\n        description,\n      },\n    ],\n  };\n  const schemaString = JSON.stringify(schema);\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">{schemaString}</script>\n    </Helmet>\n  );\n}\n\nWebPageSchema.propTypes = {\n  pageMeta: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport VisuallyHidden from '../VisuallyHidden';\n\nimport * as BlogArchivePostsStyles from './blog-archive-posts.module.scss';\n\nfunction Post({ post }) {\n  const { title, publishedDate, prettyPublishedDate } = post.frontmatter;\n\n  return (\n    <article className={BlogArchivePostsStyles.post}>\n      <span aria-hidden=\"true\">&gt;</span>\n      {/* slug has trailing slash */}\n      <Link to={`/blog/${post.slug}`}>\n        <h2>{title}</h2>\n        <p>\n          <VisuallyHidden>Published: </VisuallyHidden>\n          <time dateTime={publishedDate}>{prettyPublishedDate}</time>\n        </p>\n      </Link>\n    </article>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\n// assumes post is in order by date\nexport default function Posts({ posts }) {\n  return (\n    <>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n    </>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport var post = \"blog-archive-posts-module--post--V1MVS\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Emoji from 'a11y-react-emoji';\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport WebPageSchema from '../../components/WebPageSchema';\nimport BlogArchivePosts from '../../components/BlogArchivePosts';\n\nexport default function BlogArchivePage({ data }) {\n  const posts = data.allMdx.nodes;\n  const pageMeta = {\n    title: 'Blog',\n    description: 'Blog archive of Andy Nguyen, a web developer.',\n    uri: 'blog',\n  };\n\n  return (\n    <Layout>\n      <Seo pageMeta={pageMeta} />\n      <WebPageSchema pageMeta={pageMeta} />\n      <section aria-labelledby=\"blog\">\n        <h1 id=\"blog\">\n          Blog <Emoji symbol=\"📝\" />\n        </h1>\n      </section>\n      <BlogArchivePosts posts={posts} />\n    </Layout>\n  );\n}\n\nBlogArchivePage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n  query BlogArchivePageQuery {\n    allMdx(\n      sort: { fields: frontmatter___publishedDate, order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          publishedDate\n          prettyPublishedDate: publishedDate(formatString: \"MMM DD, YYYY\")\n        }\n        id\n        slug\n      }\n    }\n  }\n`;\n"],"names":["WebPageSchema","pageMeta","schema","name","title","description","schemaString","JSON","stringify","type","Post","post","frontmatter","publishedDate","prettyPublishedDate","className","to","slug","VisuallyHidden","dateTime","Posts","posts","map","key","id","BlogArchivePage","data","allMdx","nodes","uri","Layout","Seo","symbol"],"sourceRoot":""}