{"version":3,"file":"component---src-pages-blog-index-js-2434fff99e3b286a3980.js","mappings":"8LAIe,SAASA,EAAT,GAAsC,IAAf,SAAEC,GAAY,EAClD,MAAM,MAAEC,EAAF,YAASC,GAAgBF,EAEzBG,EAAS,CACb,WAAY,qBACZ,SAAU,CACR,CACE,QAAS,UACTC,KAAMH,EACNC,iBAIAG,EAAeC,KAAKC,UAAUJ,GAEpC,OACE,gBAAC,IAAD,KACE,0BAAQK,KAAK,uBAAuBH,GAGzC,C,sJCjBD,SAASI,EAAT,GAAyB,IAAX,KAAEC,GAAQ,EACtB,MAAM,MAAET,EAAF,cAASU,EAAT,oBAAwBC,GAAwBF,EAAKG,YAE3D,OACE,2BAASC,UCVK,0CDWZ,wBAAM,cAAY,QAAlB,KACA,gBAAC,KAAD,CAAMC,GAAK,SAAQL,EAAKM,OAAOC,SAC7B,0BAAKhB,GACL,yBACE,gBAACiB,EAAA,EAAD,oBACA,wBAAMC,SAAUR,GAAgBC,KAKzC,CAOc,SAASQ,EAAT,GAA2B,IAAZ,MAAEC,GAAS,EACvC,OACE,gCACGA,EAAMC,KAAKZ,GACV,gBAACD,EAAD,CAAMc,IAAKb,EAAKc,GAAId,KAAMA,MAIjC,CE5Bc,SAASe,EAAT,GAAoC,IAAX,KAAEC,GAAQ,EAChD,MAAML,EAAQK,EAAKC,OAAOC,MACpB5B,EAAW,CACfC,MAAO,OACPC,YAAa,gDACb2B,IAAK,QAGP,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAK/B,SAAUA,IACf,gBAACD,EAAA,EAAD,CAAeC,SAAUA,IACzB,2BAAS,kBAAgB,QACvB,sBAAIwB,GAAG,QAAP,QACO,gBAAC,IAAD,CAAOQ,OAAO,SAGvB,gBAAC,EAAD,CAAkBX,MAAOA,IAG9B,C","sources":["webpack://personal-site-generator/./src/components/WebPageSchema.js","webpack://personal-site-generator/./src/components/BlogArchivePosts/BlogArchivePosts.js","webpack://personal-site-generator/./src/components/BlogArchivePosts/blog-archive-posts.module.scss","webpack://personal-site-generator/./src/pages/blog/index.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nexport default function WebPageSchema({ pageMeta }) {\n  const { title, description } = pageMeta;\n\n  const schema = {\n    '@context': 'http://schema.org/',\n    '@graph': [\n      {\n        '@type': 'WebPage',\n        name: title,\n        description,\n      },\n    ],\n  };\n  const schemaString = JSON.stringify(schema);\n\n  return (\n    <Helmet>\n      <script type=\"application/ld+json\">{schemaString}</script>\n    </Helmet>\n  );\n}\n\nWebPageSchema.propTypes = {\n  pageMeta: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n  }),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport VisuallyHidden from '../VisuallyHidden';\n\nimport * as BlogArchivePostsStyles from './blog-archive-posts.module.scss';\n\nfunction Post({ post }) {\n  const { title, publishedDate, prettyPublishedDate } = post.frontmatter;\n\n  return (\n    <article className={BlogArchivePostsStyles.post}>\n      <span aria-hidden=\"true\">&gt;</span>\n      <Link to={`/blog/${post.fields.slug}/`}>\n        <h2>{title}</h2>\n        <p>\n          <VisuallyHidden>Published: </VisuallyHidden>\n          <time dateTime={publishedDate}>{prettyPublishedDate}</time>\n        </p>\n      </Link>\n    </article>\n  );\n}\n\nPost.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\n// assumes post is in order by date\nexport default function Posts({ posts }) {\n  return (\n    <>\n      {posts.map((post) => (\n        <Post key={post.id} post={post} />\n      ))}\n    </>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.array.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport var post = \"blog-archive-posts-module--post--V1MVS\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport Emoji from 'a11y-react-emoji';\nimport Layout from '../../components/Layout';\nimport Seo from '../../components/Seo';\nimport WebPageSchema from '../../components/WebPageSchema';\nimport BlogArchivePosts from '../../components/BlogArchivePosts';\n\nexport default function BlogArchivePage({ data }) {\n  const posts = data.allMdx.nodes;\n  const pageMeta = {\n    title: 'Blog',\n    description: 'Blog archive of Andy Nguyen, a web developer.',\n    uri: 'blog',\n  };\n\n  return (\n    <Layout>\n      <Seo pageMeta={pageMeta} />\n      <WebPageSchema pageMeta={pageMeta} />\n      <section aria-labelledby=\"blog\">\n        <h1 id=\"blog\">\n          Blog <Emoji symbol=\"📝\" />\n        </h1>\n      </section>\n      <BlogArchivePosts posts={posts} />\n    </Layout>\n  );\n}\n\nBlogArchivePage.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport const query = graphql`\n  query BlogArchivePageQuery {\n    allMdx(\n      sort: { fields: frontmatter___publishedDate, order: DESC }\n      filter: { frontmatter: { published: { eq: true } } }\n    ) {\n      nodes {\n        frontmatter {\n          title\n          publishedDate\n          prettyPublishedDate: publishedDate(formatString: \"MMM DD, YYYY\")\n        }\n        id\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n"],"names":["WebPageSchema","pageMeta","title","description","schema","name","schemaString","JSON","stringify","type","Post","post","publishedDate","prettyPublishedDate","frontmatter","className","to","fields","slug","VisuallyHidden","dateTime","Posts","posts","map","key","id","BlogArchivePage","data","allMdx","nodes","uri","Layout","Seo","symbol"],"sourceRoot":""}